{"version":3,"sources":["script.js"],"names":[],"mappings":"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","file":"script.js","sourcesContent":["const playArea = document.getElementById('playArea');\nconst startButton = document.getElementById('start');\nconst stopButton = document.getElementById('stop');\n\nlet intervalId;\nlet gameSpeed = 1000;\nlet ctx = playArea.getContext('2d');\n\nclass Snake {\n  constructor() {\n    this.body = [{ x: (playArea.width / 2), y: (playArea.height / 2) }];\n    this.size = 10;\n    this.directions = ['up', 'right', 'down', 'left'];\n    this.currentDir = 'right';\n  }\n  draw() {\n    ctx.clearRect(0,0,playArea.width, playArea.height);\n    this.body.forEach((sq) => {\n      ctx.fillRect(sq.x, sq.y, this.size, this.size);\n    });\n  }\n  move() {\n    let s = this.size;\n    \n    if (this.body.length > 1) {\n      let head = this.pop[0];\n      let tail = this.body.pop();\n    \n      switch (this.currentDir) {\n        case 'up':\n          tail.y = (head.y + s);\n          tail.x = head.x;\n          break;\n        case 'right':\n          tail.x = (head.x + s);\n          tail.y = head.y;\n          break;\n        case 'down':\n          tail.y = (head.y - s);\n          tail.x = head.x;\n          break;\n        case 'left':\n          tail.x = (head.x - s);\n          tail.y = head.y;\n          break;\n        }\n        \n        this.body.unshift(tail);\n      } else {\n        let head = this.body.pop();\n        \n        switch (this.currentDir) {\n          case 'up':\n            head.y = head.y + s;\n            break;\n          case 'right':\n            head.x = head.x + s;\n            break;\n          case 'down':\n            head.y = head.y - s;\n            break;\n          case 'left':\n            head.x = head.x - s;\n            break;\n        }\n        \n        this.body.unshift(head);\n    }\n    \n    this.draw();\n  }\n}\n\nconst Player = new Snake();\n\nPlayer.draw();\n\nfunction gameLoop() {\n  Player.move();\n}\n\nstartButton.addEventListener('click', function (e) {\n  intervalId = window.setInterval(gameLoop, gameSpeed);\n});\n\nstopButton.addEventListener('click', function (e) {\n  window.clearInterval(intervalId);\n  console.log('Stop');\n});\n\n\n"],"sourceRoot":"/source/"}